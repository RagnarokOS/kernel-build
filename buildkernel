#!/bin/sh

# Build Ragnarok's version of the Linux kernel from 'gentoo-sources'.
# WIP: this needs to be tested.

set -e

_PKGDIR="/usr/src/linux"
_CONF="/usr/src/ragnarok.config"

# Replace EXTRAVERSION = -gentoo with -ragnarok in Makefile.
sed -i -e '/EXTRAVERSION = -gentoo/c\EXTRAVERSION = -ragnarok' Makefile

# Get info from Makefile in order to construct the package name. There's
# probably a more efficient way of doing it.
_v=$(awk '/VERSION = / { print $3;exit }' Makefile)
_p=$(awk '/PATCHLEVEL = / { print $3 }' Makefile)
_s=$(awk '/SUBLEVEL = / { print $3 }' Makefile)
_ev=$(awk '/EXTRAVERSION = / { print $3 }' Makefile)
_pkg="linux-${_v}.${_p}.${_s}${_ev}.tgz"

msg() {
	msg="$1"
	printf '%s\n' "$msg"
}

# Make sure we're in the right dir. Nothing bad will happen if we're not
# in the right dir, but still, output an error either way.
if [ "$(pwd)" != "$_PKGDIR" ]; then
	msg "You must be in /usr/src/linux in order to run this script."
	exit 1
fi

# Make sure ragnarok.config is present in /usr/src.
if [ ! -f "$_CONF" ]; then
	msg "$_CONF is missing. Make sure you fetched it from
https://raw.githubusercontent.com/RagnarokOS/kernel-build/refs/heads/gentoo-kernel/ragnarok.config
before building the kernel."
	exit 1
fi

# Check if Clang is installed
if [ ! -d /usr/lib/llvm ]; then
	msg "You need clang and the full LLVM toolchain to build the kernel."
	exit 1
fi

# Safety net. Because recompiling the kernel multiple times in a row for
# stupid reasons suck, ensure that EXTRAVERSION is properly set in Makefile.
# The sed command shouldn't fail, but if it ever does, this will prevent
# the build from starting.
if [ "$_ev" != "-ragnarok" ]; then
	msg "_ev is not set to -ragnarok... exiting."
	exit 1
fi

# Copy ragnarok.config to dir.
msg "Copying $_CONF to /usr/src/linux/.config..."
cp "$_CONF" "$_PKGDIR"/.config

# Run make oldconfig.
msg "Running oldconfig..."
make CC=clang LLVM=1 oldconfig

# Now build the kernel.
msg "Building the kernel in 5 seconds..."
sleep 5	# Sleep 5 seconds to allow cancelling for whatever reason.
make CC=clang LLVM=1 -j"$(nproc)" dir-pkg

# Now build the package.
msg "Creating ${_pkg}..."
cd "$_PKGDIR"/tar-install/boot || exit
for _f in vmlinuz-* config-* System.map-*; do ln -r -s "$_f" "${_f%%-*}"; done
cd "$_PKGDIR"/tar-install || exit
tar czvf "${_pkg}" --exclude=build/ --owner=root --group=root --sort=name *
cd "$_PKGDIR" || exit

msg "Package created successfully."
